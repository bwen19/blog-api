syntax = "proto3";

package pb;

import "google/protobuf/empty.proto";
import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

import "auth_message.proto";
import "session_message.proto";
import "user_message.proto";
import "follow_message.proto";
import "notification_message.proto";
import "tag_message.proto";
import "category_message.proto";
import "comment_message.proto";
import "post_message.proto";

option go_package = "blog/server/pb";
option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
    info: {
        title: "Blog API";
        version: "1.0";
        contact: {
            name: "Eruhini";
            email: "none@example.com";
        };
    }
};

service Blog {
    // Register
    rpc Register (RegisterRequest) returns (RegisterResponse) {
        option (google.api.http) = {
            post: "/api/auth/register"
            body: "*"
        };
    }
    // Login
    rpc Login (LoginRequest) returns (LoginResponse) {
        option (google.api.http) = {
            post: "/api/auth/login"
            body: "*"
        };
    }
    // AutoLogin
    rpc AutoLogin (AutoLoginRequest) returns (AutoLoginResponse) {
        option (google.api.http) = {
            post: "/api/auth/autologin"
            body: "*"
        };
    }
    // Refresh token
    rpc Refresh (RefreshTokenRequest) returns (RefreshTokenResponse) {
        option (google.api.http) = {
            post: "/api/auth/refresh"
            body: "*"
        };
    }
    // Logout
    rpc Logout (LogoutRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            post: "/api/auth/logout"
            body: "*"
        };
    }

    // DeleteSessions
    rpc DeleteSessions (DeleteSessionsRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            delete: "/api/session"
            body:"*"
        };
    }
    // DeleteExpiredSessions
    rpc DeleteExpiredSessions (google.protobuf.Empty) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            delete: "/api/session/expired"
        };
    }
    // ListSessions
    rpc ListSessions (ListSessionsRequest) returns (ListSessionsResponse) {
        option (google.api.http) = {
            get: "/api/session"
        };
    }

    // CreateUser
    rpc CreateUser (CreateUserRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            post: "/api/user"
            body: "*"
        };
    }
    // DeleteUsers
    rpc DeleteUsers (DeleteUsersRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            delete: "/api/user"
            body: "*"
        };
    }
    // UpdateUser
    rpc UpdateUser (UpdateUserRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            patch: "/api/user/{user.id}"
            body: "user"
        };
    }
    // ListUsers
    rpc ListUsers (ListUsersRequest) returns (ListUsersResponse) {
        option (google.api.http) = {
            get: "/api/user"
        };
    }
    // ChangeProfile
    rpc ChangeProfile (ChangeProfileRequest) returns (ChangeProfileResponse) {
        option (google.api.http) = {
            patch: "/api/user/{user.id}/profile"
            body: "user"
        };
    }
    // ChangePassword
    rpc ChangePassword (ChangePasswordRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            put: "/api/user/{user_id}/password"
            body: "*"
        };
    }
    // GetUserProfile
    rpc GetUserProfile (GetUserProfileRequest) returns (GetUserProfileResponse) {
        option (google.api.http) = {
            get: "/api/user/{user_id}/profile"
        };
    }

    // MarkAllRead
    rpc MarkAllRead (google.protobuf.Empty) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            put: "/api/notification/read"
        };
    }
    // LeaveMessage
    rpc LeaveMessage (LeaveMessageRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            post: "/api/notification"
            body: "*"
        };
    }
    // DeleteNotifs
    rpc DeleteNotifs (DeleteNotifsRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            delete: "/api/notification"
            body: "*"
        };
    }
    // ListNotifs
    rpc ListNotifs (ListNotifsRequest) returns (ListNotifsResponse) {
        option (google.api.http) = {
            get: "/api/notification"
        };
    }
    // ListMessages
    rpc ListMessages (ListMessagesRequest) returns (ListMessagesResponse) {
        option (google.api.http) = {
            get: "/api/notification/admin"
        };
    }
    // CheckMessages
    rpc CheckMessages (CheckMessagesRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            put: "/api/notification/admin"
        };
    }

    // FollowUser
    rpc FollowUser (FollowUserRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            post: "/api/follow"
            body: "*"
        };
    }
    // ListFollows
    rpc ListFollows (ListFollowsRequest) returns (ListFollowsResponse) {
        option (google.api.http) = {
            get: "/api/follow"
        };
    }

    // CreatePost
    rpc CreatePost (CreatePostRequest) returns (CreatePostResponse) {
        option (google.api.http) = {
            post: "/api/post"
            body: "*"
        };
    }
    // DeletePosts
    rpc DeletePosts (DeletePostsRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            delete: "/api/post"
            body: "*"
        };
    }
    // UpdatePost
    rpc UpdatePost (UpdatePostRequest) returns (UpdatePostResponse) {
        option (google.api.http) = {
            patch: "/api/post/{post.id}"
            body: "post"
        };
    }
    // ListPosts
    rpc ListPosts (ListPostsRequest) returns (ListPostsResponse) {
        option (google.api.http) = {
            get: "/api/post/author"
        };
    }
    // SubmitPost
    rpc SubmitPost (SubmitPostRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            post: "/api/post/submit"
        };
    }
    // ReviewPost
    rpc ReviewPost (ReviewPostRequest) returns (ReviewPostResponse) {
        option (google.api.http) = {
            get: "/api/post/review/{post_id}"
        };
    }
    // PublishPost
    rpc PublishPost (PublishPostRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            post: "/api/post/publish"
        };
    }
    // WithdrawPost
    rpc WithdrawPost (WithdrawPostRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            post: "/api/post/withdraw"
        };
    }
    // ChangePost
    rpc ChangePost (ChangePostRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            patch: "/api/post/admin/{post.id}"
            body: "post"
        };
    }
    // GetPosts
    rpc GetPosts (GetPostsRequest) returns (GetPostsResponse) {
        option (google.api.http) = {
            get: "/api/post/admin"
        };
    }
    // StarPost
    rpc StarPost (StarPostRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            post: "/api/post/star"
            body: "*"
        };
    }
    // FetchPosts
    rpc FetchPosts (FetchPostsRequest) returns (FetchPostsResponse) {
        option (google.api.http) = {
            get: "/api/post"
        };
    }
    // ReadPost
    rpc ReadPost (ReadPostRequest) returns (ReadPostResponse) {
        option (google.api.http) = {
            get: "/api/post/read/{post_id}"
        };
    }

    // CreateCategory
    rpc CreateCategory (CreateCategoryRequest) returns (CreateCategoryResponse) {
        option (google.api.http) = {
            post: "/api/category"
            body: "*"
        };
    }
    // DeleteCategories
    rpc DeleteCategories (DeleteCategoriesRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            delete: "/api/category"
            body: "*"
        };
    }
    // UpdateCategory
    rpc UpdateCategory (UpdateCategoryRequest) returns (UpdateCategoryResponse) {
        option (google.api.http) = {
            put: "/api/category/{category_id}"
            body: "*"
        };
    }
    // ListCategories
    rpc ListCategories (ListCategoriesRequest) returns (ListCategoriesResponse) {
        option (google.api.http) = {
            get: "/api/category"
        };
    }
    // GetCategories
    rpc GetCategories (google.protobuf.Empty) returns (GetCategoriesResponse) {
        option (google.api.http) = {
            get: "/api/category/all"
        };
    }

    // CreateTag
    rpc CreateTag (CreateTagRequest) returns (CreateTagResponse) {
        option (google.api.http) = {
            post: "/api/tag"
            body: "*"
        };
    }
    // DeleteTags
    rpc DeleteTags (DeleteTagsRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            delete: "/api/tag"
            body: "*"
        };
    }
    // UpdateTag
    rpc UpdateTag (UpdateTagRequest) returns (UpdateTagResponse) {
        option (google.api.http) = {
            put: "/api/tag/{tag_id}"
            body: "*"
        };
    }
    // ListTags
    rpc ListTags (ListTagsRequest) returns (ListTagsResponse) {
        option (google.api.http) = {
            get: "/api/tag"
        };
    }

    // CreateComment
    rpc CreateComment (CreateCommentRequest) returns (CreateCommentResponse) {
        option (google.api.http) = {
            post: "/api/comment"
            body: "*"
        };
    }
    // DeleteComment
    rpc DeleteComment (DeleteCommentRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            delete: "/api/comment/{comment_id}"
        };
    }
    // ListComments
    rpc ListComments (ListCommentsRequest) returns (ListCommentsResponse) {
        option (google.api.http) = {
            get: "/api/comment"
        };
    }
    // ListReplies
    rpc ListReplies (ListRepliesRequest) returns (ListRepliesResponse) {
        option (google.api.http) = {
            get: "/api/comment/reply"
        };
    }
    // StarComment
    rpc StarComment (StarCommentRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            put: "/api/comment/star"
            body: "*"
        };
    }
}